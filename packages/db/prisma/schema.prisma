datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(TRAVELLER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  answeredQueries Query[] @relation("Responder")
  submittedQueries Query[] @relation("Traveler")
}

model Message {
  id        String   @id @default(uuid())
  content   String
  senderId  String
  queryId   String
  createdAt DateTime @default(now())

  query Query @relation(fields: [queryId], references: [id])
}

model Location {
  id        Int      @id @default(autoincrement())
  name      String
  latitude  Float
  longitude Float
  queries   Query[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Query {
  id         String      @id @default(uuid())
  travelerId String
  locationId Int
  responderId   String?
  queryText  String
  status     QueryStatus @default(PENDING)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  responder User?       @relation("Responder", fields: [responderId], references: [id])
  traveler User         @relation("Traveler", fields: [travelerId], references: [id])
  location Location     @relation(fields: [locationId], references: [id])
  messages  Message[]
}

enum QueryStatus {
  PENDING
  RESPONDED
  CLOSED
}

enum Role {
  TRAVELLER
  LOCAL
}
